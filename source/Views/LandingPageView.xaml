<UserControl x:Class="LandingPage.Views.LandingPageView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LandingPage.Views"
             xmlns:lpvm="clr-namespace:LandingPage.ViewModels"
             xmlns:lpm="clr-namespace:LandingPage.Models"
             xmlns:lp="clr-namespace:LandingPage"
             xmlns:conv="clr-namespace:LandingPage.Converters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:mu="clr-namespace:LandingPage.Markup"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:pn="clr-namespace:Playnite.SDK;assembly=Playnite.SDK"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance IsDesignTimeCreatable=False, Type=lpvm:LandingPageViewModel}"
             SizeChanged="UserControl_SizeChanged">
    <UserControl.Resources>
        <BitmapImage x:Key="InnerGlowBitmap" CreateOptions="IgnoreColorProfile" UriSource="pack://application:,,,/StartPagePlugin;component/innerglow.png" CacheOption="OnLoad"/>
        <Style x:Key="VirtualizedStackPanelStyle" TargetType="{x:Type VirtualizingStackPanel}">
            <Setter Property="UseLayoutRounding" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="False"/>
        </Style>
        <Style x:Key="GameGroupListStyle" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
            <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
            <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
            <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Item"/>
            <Setter Property="VirtualizingPanel.CacheLength" Value="5"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="MaxWidth" Value="1544"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="lp:ScrollViewerHelper.UseHorizontalScrolling" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Standard"/>
        </Style>
        <system:Double x:Key="CoverHeight">195</system:Double>
        <system:Double x:Key="CoverWidth">140</system:Double>
        <conv:ActualHeightToWidthConverter x:Key="ActualHeightToWidthConverter"/>
        <conv:ElementToScaledRectConverter x:Key="ElementToScaledRectConverter"/>
        <conv:VisibilityInverter x:Key="VisibilityInverter"/>
        <conv:IEnumerableNullOrEmptyToVisibilityConverter x:Key="IEnumerableNullOrEmptyToVisibilityConverter"/>
        <conv:BoolToGridLengthConverter x:Key="BoolToGridLengthConverter"/>
        <DataTemplate x:Key="GameCoverDataTemplate" DataType="{x:Type lpm:GameModel}">
            <StackPanel Orientation="Horizontal">
                <local:GameCover/>
                <Grid ClipToBounds="True" MaxWidth="{StaticResource CoverWidth}" MaxHeight="{StaticResource CoverHeight}" x:Name="ImageGrid">
                    <Grid.Width>
                        <Binding RelativeSource="{RelativeSource Mode=Self}" 
                                 Path="ActualHeight" 
                                 Converter="{StaticResource ActualHeightToWidthConverter}" 
                                 Mode="OneWay">
                            <Binding.ConverterParameter>
                                <system:Double>0.71794871794871794871794871794872</system:Double>
                            </Binding.ConverterParameter>
                        </Binding>
                    </Grid.Width>
                    <Grid.OpacityMask>
                        <VisualBrush Stretch="None" AutoLayoutContent="True">
                            <VisualBrush.Visual>
                                <Border Background="Black" CornerRadius="10" x:Name="Mask"
                                                        Width="{Binding ElementName=ImageGrid, Path=ActualWidth}"
                                                        Height="{Binding ElementName=ImageGrid, Path=ActualHeight}"/>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Grid.OpacityMask>
                    <Image Source="{Binding Game.CoverImage, Converter={StaticResource ImageStringToImageConverter}, FallbackValue={StaticResource DefaultGameCover}}" Stretch="UniformToFill" 
                                            HorizontalAlignment="Center" VerticalAlignment="Center"
                                            RenderOptions.BitmapScalingMode="HighQuality"/>
                    <Image Source="{StaticResource InnerGlowBitmap}" Stretch="Fill" x:Name="GlowImage"
                                            RenderOptions.BitmapScalingMode="Fant" Opacity="0.0"/>
                    <TextBlock Text="{Binding Game.Name}" 
                               Style="{StaticResource BaseTextBlockStyle}" 
                               VerticalAlignment="Bottom" 
                               TextWrapping="Wrap" 
                               TextAlignment="Center" 
                               Padding="4" 
                               Background="#7F000000"
                               Visibility="{mu:LandingPageSettings Settings.ShowTitleOnCover}"/>
                    <Viewbox x:Name="Buttons" Visibility="Hidden">
                        <StackPanel Orientation="Horizontal" Margin="5">
                            <Button Background="{x:Null}" Padding="4" x:Name="PlayButton" Click="PlayButton_Click" BorderThickness="0">
                                <TextBlock Text="" FontFamily="{StaticResource FontIcoFont}" x:Name="PlayIcon"/>
                            </Button>
                            <Button Background="{x:Null}"  Padding="4" x:Name="InfoButton" Click="InfoButton_Click" BorderThickness="0">
                                <TextBlock Text="" FontFamily="{StaticResource FontIcoFont}"/>
                            </Button>
                        </StackPanel>
                    </Viewbox>
                    <ContentControl x:Name="Proxy" Visibility="{mu:LandingPageSettings Settings.ShowDetails}" Width="0" Height="0"/>
                </Grid>
                <Popup Height="204.75" Width="462" x:Name="Description" IsOpen="False" Placement="Right" PlacementTarget="{Binding ElementName=ImageGrid}" 
                                       ClipToBounds="True" PopupAnimation="Fade">
                    <Popup.PlacementRectangle>
                        <MultiBinding Converter="{StaticResource ElementToScaledRectConverter}">
                            <MultiBinding.ConverterParameter>
                                <system:Double>1.05</system:Double>
                            </MultiBinding.ConverterParameter>
                            <MultiBinding.Bindings>
                                <Binding ElementName="ImageGrid" Path="ActualWidth"/>
                                <Binding ElementName="ImageGrid" Path="ActualHeight"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Popup.PlacementRectangle>
                    <Grid IsHitTestVisible="False">
                        <Border Background="#303030" CornerRadius="7"/>
                        <Border Background="{StaticResource GridItemBackgroundBrush}"
                                                CornerRadius="7"/>
                        <Border CornerRadius="7" Opacity="0.3" x:Name="PopupBackground">
                            <Border.OpacityMask>
                                <LinearGradientBrush StartPoint="1,0" EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStop Color="Transparent"/>
                                        <GradientStop Color="Black" Offset="1"/>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Border.OpacityMask>
                        </Border>
                        <local:GameDetailsView Margin="10,5"/>
                    </Grid>
                </Popup>
            </StackPanel>
            <DataTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsVisible" Value="True" SourceName="Proxy"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="IsOpen" Value="True" TargetName="Description"/>
                        <Setter Property="Background" TargetName="PopupBackground">
                            <Setter.Value>
                                <ImageBrush ImageSource="{Binding Game.BackgroundImage, Converter={StaticResource ImageStringToImageConverter}, 
                                                                                    FallbackValue={StaticResource DefaultGameCover},
                                                                                    TargetNullValue={StaticResource DefaultGameCover}}"
                                                            Stretch="UniformToFill"/>
                            </Setter.Value>
                        </Setter>
                    </MultiTrigger.Setters>
                </MultiTrigger>
                <Trigger Property="IsMouseOver" Value="True" SourceName="ImageGrid">
                    <Setter Property="Visibility" Value="Visible" TargetName="Buttons"/>
                </Trigger>
                <DataTrigger Binding="{Binding Game.IsLaunching}" Value="True">
                    <Setter Property="Visibility" TargetName="GlowImage" Value="Visible"/>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="Flashing">
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimation Duration="0:0:1" To="0.5" From="0" AutoReverse="True"
                                                 Storyboard.TargetName="GlowImage" Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Game.IsRunning}" Value="True"/>
                        <!--<Condition Binding="{Binding ElementName=ImageGrid, Path=IsMouseOver}" Value="True"/>-->
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" TargetName="GlowImage" Value="Visible"/>
                        <Setter Property="Opacity" TargetName="GlowImage" Value="0.5"/>
                    </MultiDataTrigger.Setters>
                    <MultiDataTrigger.EnterActions>
                        <StopStoryboard BeginStoryboardName="Flashing"/>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.5" To="0.5"
                                                 Storyboard.TargetName="GlowImage"
                                                 Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.5" To="0"
                                                 Storyboard.TargetName="GlowImage"
                                                 Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Game.IsInstalled}" Value="{StaticResource False}">
                    <Setter Property="Text" Value="" TargetName="PlayIcon"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <CollectionViewSource x:Key="RecentlyAddedSource" Source="{Binding RecentlyAddedGames}" IsLiveGroupingRequested="True" IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Game.Added.Date" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Game.Added.Date">
                    <PropertyGroupDescription.SortDescriptions>
                        <scm:SortDescription PropertyName="Name" Direction="Descending"/>
                    </PropertyGroupDescription.SortDescriptions>
                </PropertyGroupDescription>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <CollectionViewSource x:Key="RecentlyPlayedSource" Source="{Binding RecentlyPlayedGames}" IsLiveGroupingRequested="True" IsLiveSortingRequested="True">
            <CollectionViewSource.SortDescriptions>
                <scm:SortDescription PropertyName="Game.LastActivity.Date" Direction="Descending"/>
            </CollectionViewSource.SortDescriptions>
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="Game.LastActivity.Date">
                    <PropertyGroupDescription.SortDescriptions>
                        <scm:SortDescription PropertyName="Name" Direction="Descending"/>
                    </PropertyGroupDescription.SortDescriptions>
                </PropertyGroupDescription>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource>
        <Style x:Key="GameGroupBox" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type GroupBox}}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <DockPanel>
                            <Border DockPanel.Dock="Top" Padding="5,0">
                                <Border BorderThickness="0,0,0,1" BorderBrush="{StaticResource NormalBrush}" Padding="0">
                                    <TextBlock Style="{StaticResource BaseTextBlockStyle}" Margin="{TemplateBinding Padding}">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"
                                                          RecognizesAccessKey="True" />
                                    </TextBlock>
                                </Border>
                            </Border>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" DockPanel.Dock="Top"
                                              Margin="0"/>
                        </DockPanel>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}" />
        <DataTemplate x:Key="GameDataTemplate" DataType="{x:Type lpm:GameGroup}">
            <GroupBox Header="{Binding Label}" Style="{DynamicResource GameGroupBox}">
                <ListBox ItemsSource="{Binding Games}" ItemContainerStyle="{DynamicResource GameListItem}"
                         BorderThickness="0" Background="Transparent" Padding="0"
                         ItemTemplate="{DynamicResource GameCoverDataTemplate}">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Margin="0"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ItemsPresenter}">
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="ItemsControl.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <ContentPresenter Margin="0"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                </ListBox>
            </GroupBox>
        </DataTemplate>
        <Style x:Key="GameListItem" TargetType="ListBoxItem">
            <EventSetter Event="MouseUp" Handler="ListBoxItem_MouseUp"/>
            <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="7"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" x:Name="Scale"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1.05"
                                                 Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1.05"
                                                 Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1"
                                                 Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1"
                                                 Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GameGroupItem" TargetType="ListBoxItem">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid>
            <Grid.CacheMode>
                <BitmapCache EnableClearType="False" 
                         RenderAtScale="0.1" 
                         SnapsToDevicePixels="False" />
            </Grid.CacheMode>
            <Image Stretch="UniformToFill" Source="{Binding BackgroundImagePath.Object, Converter={StaticResource ImageStringToImageConverter}}"
                   Opacity="0.5">
                <Image.Effect>
                    <BlurEffect Radius="100" KernelType="Gaussian" RenderingBias="Performance"/>
                </Image.Effect>
            </Image>
        </Grid>
        <ScrollViewer HorizontalScrollBarVisibility="Disabled"
                  VerticalScrollBarVisibility="Disabled" Padding="0,40,0,5" Background="{x:Null}">
            <Grid>
                <Grid HorizontalAlignment="Center">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="10"/>
                        <RowDefinition Height="1.2*"/>
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Grid.IsSharedSizeScope="True" VerticalAlignment="Top">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="LeftRight"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto" SharedSizeGroup="LeftRight"/>
                        </Grid.ColumnDefinitions>
                        <Grid Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.IsSharedSizeScope="True" Grid.Column="1"
                              Visibility="{Binding Settings.Settings.ShowClock, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" SharedSizeGroup="Digits"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*" SharedSizeGroup="Digits"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Clock.Time, StringFormat=HH}" FontSize="120" Grid.Column="0" TextAlignment="Right"/>
                            <TextBlock Text=":" FontSize="120" Grid.Column="1" TextAlignment="Center"/>
                            <TextBlock Text="{Binding Clock.Time, StringFormat=mm}" FontSize="120" Grid.Column="2" TextAlignment="Left"/>
                        </Grid>
                        <DockPanel Grid.Column="0" UseLayoutRounding="True" SnapsToDevicePixels="True">
                            <Label Content=" " DockPanel.Dock="Left" Margin="10,10,5,10">
                                <Label.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </Label.LayoutTransform>
                            </Label>
                            <ListBox ItemsSource="{Binding SpecialGames}" Style="{StaticResource GameGroupListStyle}"
                                     ItemTemplate="{StaticResource GameDataTemplate}"
                             ItemContainerStyle="{StaticResource GameGroupItem}"
                             DockPanel.Dock="Left" BorderThickness="0"
                             VerticalAlignment="Top"
                             Background="Transparent"
                             MaxWidth="1544">
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel Orientation="Horizontal" Style="{StaticResource VirtualizedStackPanelStyle}"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </DockPanel>
                        <Grid Visibility="{Binding SuccessStory.LatestAchievements, Converter={StaticResource ICollectionNullOrEmptyToVisibilityConverter}}"
                              Grid.Column="2">
                            <StackPanel Orientation="Horizontal"
                                        ScrollViewer.VerticalScrollBarVisibility="Disabled"
                                        ClipToBounds="False"
                                        Visibility="{Binding Settings.Settings.ShowRecentAchievements, Converter={StaticResource BooleanToHiddenConverter}}">
                                <Label Content="{DynamicResource LOC_SPG_RecentAchievements}" DockPanel.Dock="Left" Margin="10,10,5,10">
                                    <Label.LayoutTransform>
                                        <RotateTransform Angle="-90" />
                                    </Label.LayoutTransform>
                                </Label>
                                <local:RecentAchievementsView DataContext="{Binding SuccessStory}" Width="300" ClipToBounds="False"/>
                            </StackPanel>
                        </Grid>
                    </Grid>

                    <Grid Grid.Row="2" VerticalAlignment="Bottom">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="{Binding IsVisible, ElementName=RecentlyPlayedListBox, Converter={StaticResource BoolToGridLengthConverter}}"/>
                            <RowDefinition Height="{Binding IsVisible, ElementName=RecentlyAddedListBox, Converter={StaticResource BoolToGridLengthConverter}}"/>
                        </Grid.RowDefinitions>
                        <DockPanel Grid.Row="1" UseLayoutRounding="True" SnapsToDevicePixels="True"
                            Visibility="{Binding Settings.Settings.ShowAddedGames, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Label Content="{DynamicResource LOC_SPG_RecentlyAddedGames}" DockPanel.Dock="Left" Margin="10,10,5,30">
                                <Label.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </Label.LayoutTransform>
                            </Label>
                            <ListBox x:Name="RecentlyAddedListBox" 
                                     Style="{DynamicResource GameGroupListStyle}"
                                     DockPanel.Dock="Left"
                                     ItemsSource="{Binding Source={StaticResource RecentlyAddedSource}}"
                                     ItemContainerStyle="{StaticResource GameListItem}"
                                     ItemTemplate="{StaticResource GameCoverDataTemplate}">
                                <ListBox.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.Panel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal" 
                                                                        Style="{DynamicResource VirtualizedStackPanelStyle}"/>
                                            </ItemsPanelTemplate>
                                        </GroupStyle.Panel>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="GroupItem">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <GroupBox Style="{StaticResource GameGroupBox}" Header="{Binding Name, Converter={StaticResource DateTimeToLastPlayedConverter}}">
                                                                <ItemsPresenter/>
                                                            </GroupBox>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ListBox.GroupStyle>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </DockPanel>
                        <DockPanel Grid.Row="0" UseLayoutRounding="True" SnapsToDevicePixels="True"
                            Visibility="{Binding Settings.Settings.ShowRecentGames, Converter={StaticResource BooleanToVisibilityConverter}, Mode=OneWay}">
                            <Label Content="{DynamicResource LOCQuickFilterRecentlyPlayed}" DockPanel.Dock="Left" Margin="10,10,5,30">
                                <Label.LayoutTransform>
                                    <RotateTransform Angle="-90" />
                                </Label.LayoutTransform>
                            </Label>
                            <ListBox x:Name="RecentlyPlayedListBox" 
                                         Style="{DynamicResource GameGroupListStyle}"
                                         DockPanel.Dock="Left" 
                                         ItemsSource="{Binding Source={StaticResource RecentlyPlayedSource}}"
                                         ItemContainerStyle="{StaticResource GameListItem}"
                                         ItemTemplate="{StaticResource GameCoverDataTemplate}">
                                <ListBox.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.Panel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal" 
                                                                        Style="{DynamicResource VirtualizedStackPanelStyle}"/>
                                            </ItemsPanelTemplate>
                                        </GroupStyle.Panel>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="GroupItem">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <GroupBox Style="{StaticResource GameGroupBox}" Header="{Binding Name, Converter={StaticResource DateTimeToLastPlayedConverter}}">
                                                                <ItemsPresenter/>
                                                            </GroupBox>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ListBox.GroupStyle>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </DockPanel>
                    </Grid>
                </Grid>
            </Grid>
        </ScrollViewer>
        <Button HorizontalAlignment="Right" VerticalAlignment="Top" Margin="20,40" Command="{Binding OpenSettingsCommand}">
            <TextBlock Text="" FontFamily="{DynamicResource FontIcoFont}"/>
        </Button>
        <Grid HorizontalAlignment="Center" VerticalAlignment="Top" x:Name="NotificationGrid"
              Width="360" Margin="0" Visibility="{Binding Settings.Settings.EnableNotifications, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Border Padding="0" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0,25,0,0"
                    Visibility="{Binding ElementName=NotificationsBorder, Path=Tag, Converter={StaticResource VisibilityInverter}}">
                <Button Visibility="{Binding Notifications, Converter={StaticResource IEnumerableNullOrEmptyToVisibilityConverter}}"
                        ClickMode="Release" Click="ToggleNotifications_Click">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{DynamicResource LOCNotifications}"/>
                        <Border Background="{DynamicResource GlyphBrush}" CornerRadius="9" Margin="5,0,0,0" MinWidth="18">
                            <TextBlock Text="{Binding Notifications.Count}" Padding="3,1" 
                                       HorizontalAlignment="Center" VerticalAlignment="Center"
                                       TextAlignment="Center"/>
                        </Border>
                    </StackPanel>
                </Button>
            </Border>
            <Border x:Name="NotificationsBorder" 
                CornerRadius="0,0,5,5">
                <Border.Background>
                    <SolidColorBrush Color="{DynamicResource PopupBackgroundColor}" Opacity="0.5"/>
                </Border.Background>
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Setter Property="Tag" Value="{x:Static Visibility.Collapsed}"/>
                        <Setter Property="RenderTransform">
                            <Setter.Value>
                                <TranslateTransform Y="-550" x:Name="NotifactionRenderTransform"/>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Settings.Settings.MinimizeNotificationsOnLaunch, Mode=OneWay}" Value="{StaticResource False}">
                                <Setter Property="Tag" Value="{Binding Notifications, Converter={StaticResource IEnumerableNullOrEmptyToVisibilityConverter}}"/>
                            </DataTrigger>
                            <Trigger Property="Tag" Value="{x:Static Visibility.Visible}">
                                <Trigger.EnterActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation
                                                To="-50"
                                                Storyboard.TargetProperty="RenderTransform.Y">
                                                <DoubleAnimation.EasingFunction>
                                                    <ElasticEase Springiness="12" Oscillations="2" EasingMode="EaseOut"/>
                                                </DoubleAnimation.EasingFunction>
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.EnterActions>
                                <Trigger.ExitActions>
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Duration="0:0:0.25"
                                                To="-600"
                                                Storyboard.TargetProperty="RenderTransform.Y">
                                            </DoubleAnimation>
                                        </Storyboard>
                                    </BeginStoryboard>
                                </Trigger.ExitActions>
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel x:Name="NotificationPanel" 
                        Margin="5,50,5,5">
                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Bottom"
                               Text="{DynamicResource LOCNotifications}"
                               Margin="0,6,0,4"/>
                    <ItemsControl ItemsSource="{Binding Notifications}"
                              VirtualizingPanel.ScrollUnit="Pixel"
                              VirtualizingPanel.IsVirtualizing="True"
                              VirtualizingPanel.VirtualizationMode="Recycling"
                              MaxHeight="300">
                        <ItemsControl.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel/>
                            </ItemsPanelTemplate>
                        </ItemsControl.ItemsPanel>
                        <ItemsControl.Template>
                            <ControlTemplate TargetType="ItemsControl">
                                <Border BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Background="{TemplateBinding Background}">
                                    <ScrollViewer x:Name="ScrollViewer"
                                              CanContentScroll="True" 
                                              Padding="{TemplateBinding Padding}"
                                              Focusable="False"
                                              HorizontalScrollBarVisibility="Disabled"
                                              VerticalScrollBarVisibility="Auto"
                                              >
                                        <ItemsPresenter/>
                                    </ScrollViewer>
                                </Border>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="ComputedVerticalScrollBarVisibility" SourceName="ScrollViewer"
                                         Value="Visible">
                                        <Setter Property="Margin" Value="0,0,-16,0" TargetName="ScrollViewer"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </ItemsControl.Template>
                        <ItemsControl.ItemTemplate>
                            <DataTemplate DataType="{x:Type pn:NotificationMessage}">
                                <Grid Margin="0,2">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>
                                    <Border CornerRadius="5" Opacity="0.15"
                                            Grid.ColumnSpan="2" IsHitTestVisible="False"
                                            x:Name="ItemBackground">
                                        <Border.Background>
                                            <LinearGradientBrush StartPoint="0,0.5">
                                                <LinearGradientBrush.GradientStops>
                                                    <GradientStop Color="White"/>
                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                </LinearGradientBrush.GradientStops>
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Button Grid.Column="0" Command="{Binding ActivateCommand}" CommandParameter="{Binding .}" x:Name="NotificationActivationButton">
                                        <Button.Template>
                                            <ControlTemplate TargetType="Button">
                                                <ContentPresenter/>
                                            </ControlTemplate>
                                        </Button.Template>
                                        <StackPanel VerticalAlignment="Center">
                                            <TextBlock Text="{Binding Text}"  VerticalAlignment="Center"
                                                        TextWrapping="Wrap"
                                                        Padding="4"
                                                        Foreground="{DynamicResource TextBrush}"/>
                                        </StackPanel>
                                    </Button>
                                    <Button Command="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ItemsControl}, Path=DataContext.DeleteNotificationCommand}" 
                                            CommandParameter="{Binding .}"
                                            Grid.Column="1" BorderThickness="0" Background="Transparent" Visibility="Collapsed"
                                            x:Name="HideButton">
                                        <TextBlock Text="" FontFamily="{StaticResource FontIcoFont}"/>
                                    </Button>
                                </Grid>
                                <DataTemplate.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Opacity" Value="0.25" TargetName="ItemBackground"/>
                                        <Setter Property="Visibility" Value="Visible" TargetName="HideButton"/>
                                    </Trigger>
                                    <DataTrigger Binding="{Binding ActivationAction}" Value="{x:Null}">
                                        <Setter Property="Cursor" TargetName="NotificationActivationButton" Value="Arrow"/>
                                    </DataTrigger>
                                </DataTemplate.Triggers>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                    <Grid Margin="0,2,0,0" Visibility="{Binding Settings.Settings.ShowNotificationButtons, Mode=OneWay, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="3"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Command="{Binding ClearNotificationsCommand}" Grid.Column="0"
                                ClickMode="Release">
                            <TextBlock Text="{DynamicResource LOCDismissAll}" FontSize="{DynamicResource FontSizeSmall}"/>
                        </Button>
                        <Button Grid.Column="2" ClickMode="Release" Click="ToggleNotifications_Click">
                            <TextBlock Text="{DynamicResource LOCMinimize}" FontSize="{DynamicResource FontSizeSmall}"/>
                        </Button>
                    </Grid>
                </StackPanel>
            </Border>
        </Grid>
    </Grid>
</UserControl>
