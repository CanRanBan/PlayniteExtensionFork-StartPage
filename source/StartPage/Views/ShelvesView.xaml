<UserControl x:Class="LandingPage.Views.ShelvesView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:LandingPage.Views"
             xmlns:lpvm="clr-namespace:LandingPage.ViewModels"
             xmlns:lpm="clr-namespace:LandingPage.Models"
             xmlns:lp="clr-namespace:LandingPage"
             xmlns:conv="clr-namespace:LandingPage.Converters"
             xmlns:system="clr-namespace:System;assembly=mscorlib"
             xmlns:mu="clr-namespace:LandingPage.Markup"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:pn="clr-namespace:Playnite.SDK;assembly=Playnite.SDK" 
             xmlns:controls="clr-namespace:LandingPage.Controls" xmlns:system1="clr-namespace:System;assembly=System"
             xmlns:ext="clr-namespace:LandingPage.Extensions" xmlns:numeric="http://gu.se/NumericInput"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             d:DataContext="{d:DesignInstance IsDesignTimeCreatable=False, Type=lpvm:ShelvesViewModel}"
             SizeChanged="UserControl_SizeChanged"
             Background="Transparent">
    <UserControl.Resources>
        <system:Boolean x:Key="False">False</system:Boolean>
        <system:Boolean x:Key="True">True</system:Boolean>
        <system:Int32 x:Key="Zero">0</system:Int32>
        <BitmapImage x:Key="InnerGlowBitmap" CreateOptions="IgnoreColorProfile" UriSource="pack://application:,,,/StartPagePlugin;component/innerglow.png" CacheOption="OnLoad"/>
        <Style x:Key="VirtualizedStackPanelStyle" TargetType="{x:Type VirtualizingStackPanel}">
            <Setter Property="UseLayoutRounding" Value="False"/>
            <Setter Property="SnapsToDevicePixels" Value="False"/>
        </Style>
        <Style x:Key="GameGroupListStyle" TargetType="ListBox" BasedOn="{StaticResource {x:Type ListBox}}">
            <Setter Property="VirtualizingPanel.IsContainerVirtualizable" Value="True"/>
            <Setter Property="VirtualizingPanel.IsVirtualizing" Value="True"/>
            <Setter Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="True"/>
            <Setter Property="VirtualizingPanel.ScrollUnit" Value="Pixel"/>
            <Setter Property="VirtualizingPanel.CacheLengthUnit" Value="Item"/>
            <Setter Property="VirtualizingPanel.CacheLength" Value="5"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="MaxWidth" Value="1544"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Visible"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled"/>
            <Setter Property="lp:ScrollViewerHelper.UseHorizontalScrolling" Value="True"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="VirtualizingPanel.VirtualizationMode" Value="Standard"/>
            <Setter Property="Padding" Value="0"/>
        </Style>
        <system:Double x:Key="CoverHeight">195</system:Double>
        <system:Double x:Key="CoverWidth">140</system:Double>
        <conv:MultiplyConverter x:Key="MultiplyConverter"/>
        <conv:ActualHeightToWidthConverter x:Key="ActualHeightToWidthConverter"/>
        <conv:HeightToWidthMultiConverter x:Key="HeightToWidthMultiConverter"/>
        <conv:WidthToHeightMultiConverter x:Key="WidthToHeightMultiConverter"/>
        <conv:ElementToScaledRectConverter x:Key="ElementToScaledRectConverter"/>
        <conv:UriToBitmapImageConverter x:Key="UriToBitmapImageConverter"/>
        <conv:VisibilityInverter x:Key="VisibilityInverter"/>
        <conv:DoubleToGridLengthConverter x:Key="DoubleToGridLengthConverter"/>
        <conv:IEnumerableNullOrEmptyToVisibilityConverter x:Key="IEnumerableNullOrEmptyToVisibilityConverter"/>
        <conv:BoolToGridLengthConverter x:Key="BoolToGridLengthConverter"/>
        <conv:ObjectToGroupHeaderConverter x:Key="ObjectToGroupHeaderConverter"/>
        <conv:DoubleToNegativeTopMarginConverter x:Key="DoubleToNegativeTopMarginConverter"/>
        <DataTemplate x:Key="GameCoverDataTemplate" DataType="{x:Type lpm:GameModel}">
            <StackPanel Orientation="Horizontal" MouseEnter="StackPanel_MouseEnter" MouseLeave="StackPanel_MouseLeave">
                <Grid ClipToBounds="True"
                      MaxWidth="{mu:LandingPageSettings Settings.MaxCoverWidth}" x:Name="ImageGrid">
                    <Grid.Width>
                        <MultiBinding Converter="{StaticResource HeightToWidthMultiConverter}">
                            <MultiBinding.Bindings>
                                <Binding RelativeSource="{RelativeSource Mode=Self}" 
                                         Path="ActualHeight" 
                                         Mode="OneWay">
                                </Binding>
                                <mu:LandingPageSettings Path="Settings.CoverAspectRatio"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Grid.Width>
                    <Grid.MaxHeight>
                        <MultiBinding Converter="{StaticResource WidthToHeightMultiConverter}">
                            <MultiBinding.Bindings>
                                <Binding RelativeSource="{RelativeSource Mode=Self}" 
                                         Path="MaxWidth" 
                                         Mode="OneWay">
                                </Binding>
                                <mu:LandingPageSettings Path="Settings.CoverAspectRatio"/>
                            </MultiBinding.Bindings>
                        </MultiBinding>
                    </Grid.MaxHeight>
                    <Grid.OpacityMask>
                        <VisualBrush Stretch="None" AutoLayoutContent="True">
                            <VisualBrush.Visual>
                                <Border Background="Black" CornerRadius="10" x:Name="Mask"
                                                        Width="{Binding ElementName=ImageGrid, Path=ActualWidth}"
                                                        Height="{Binding ElementName=ImageGrid, Path=ActualHeight}"/>
                            </VisualBrush.Visual>
                        </VisualBrush>
                    </Grid.OpacityMask>
                    <Image Source="{Binding Game.CoverImage, ConverterParameter={StaticResource True}, Converter={StaticResource UriToBitmapImageConverter}, 
                        FallbackValue={StaticResource DefaultGameCover}, TargetNullValue={StaticResource DefaultGameCover}, Mode=OneWay}" Stretch="UniformToFill" 
                                            HorizontalAlignment="Center" VerticalAlignment="Center"
                                            RenderOptions.BitmapScalingMode="Fant"
                           x:Name="CoverImage"/>
                    <Image Source="{StaticResource InnerGlowBitmap}" Stretch="Fill" x:Name="GlowImage"
                                            RenderOptions.BitmapScalingMode="Fant" Opacity="0.0"/>
                    <TextBlock x:Name="NameTextBlock"
                               Text="{Binding Game.Name}" 
                               Style="{StaticResource BaseTextBlockStyle}" 
                               VerticalAlignment="Bottom" 
                               TextWrapping="Wrap" 
                               TextAlignment="Center" 
                               Padding="4" 
                               Background="#7F000000"
                               Visibility="Hidden"/>
                    <Viewbox x:Name="Buttons" Visibility="Hidden">
                        <StackPanel Orientation="Horizontal" Margin="1">
                            <Button Background="Transparent" Padding="7,5,4,5" x:Name="PlayButton" Click="PlayButton_Click" BorderThickness="0">
                                <TextBlock Text="" FontFamily="{StaticResource FontIcoFont}" x:Name="PlayIcon"/>
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <Button Background="Transparent"  Padding="4,5,7,5" x:Name="InfoButton" Click="InfoButton_Click" BorderThickness="0">
                                <TextBlock Text="" FontFamily="{StaticResource FontIcoFont}"/>
                                <Button.Style>
                                    <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                        <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
                                        <Style.Triggers>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                            </Trigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </StackPanel>
                    </Viewbox>
                    <ContentControl x:Name="Proxy" Visibility="{mu:LandingPageSettings Settings.ShowDetails}" Width="0" Height="0"/>
                </Grid>
                
            </StackPanel>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{mu:LandingPageSettings Settings.ShowTitleOnCover}" Value="{StaticResource True}">
                    <Setter Property="Visibility" Value="Visible" TargetName="NameTextBlock"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding ElementName=CoverImage, Path=Source}" Value="{StaticResource DefaultGameCover}">
                    <Setter Property="Visibility" Value="Visible" TargetName="NameTextBlock"/>
                </DataTrigger>
                <!--<MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsVisible" Value="True" SourceName="Proxy"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="IsOpen" Value="True" TargetName="Description"/>
                        --><!--<Setter Property="DataContext" TargetName="Description" Value="{Binding ., Mode=OneTime}"/>--><!--
                    </MultiTrigger.Setters>
                </MultiTrigger>-->
                <Trigger Property="IsMouseOver" Value="True" SourceName="ImageGrid">
                    <Setter Property="Visibility" Value="Visible" TargetName="Buttons"/>
                </Trigger>
                <DataTrigger Binding="{Binding Game.IsLaunching}" Value="True">
                    <Setter Property="Visibility" TargetName="GlowImage" Value="Visible"/>
                    <DataTrigger.EnterActions>
                        <BeginStoryboard x:Name="Flashing">
                            <Storyboard RepeatBehavior="Forever">
                                <DoubleAnimation Duration="0:0:1" To="0.5" From="0" AutoReverse="True"
                                                 Storyboard.TargetName="GlowImage" Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </DataTrigger.EnterActions>
                    <DataTrigger.ExitActions>
                        <RemoveStoryboard BeginStoryboardName="Flashing"/>
                    </DataTrigger.ExitActions>
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Game.IsRunning}" Value="True"/>
                        <!--<Condition Binding="{Binding ElementName=ImageGrid, Path=IsMouseOver}" Value="True"/>-->
                    </MultiDataTrigger.Conditions>
                    <MultiDataTrigger.Setters>
                        <Setter Property="Visibility" TargetName="GlowImage" Value="Visible"/>
                        <Setter Property="Opacity" TargetName="GlowImage" Value="0.5"/>
                    </MultiDataTrigger.Setters>
                    <MultiDataTrigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.5" To="0.5"
                                                 Storyboard.TargetName="GlowImage"
                                                 Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.EnterActions>
                    <MultiDataTrigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Duration="0:0:0.5" To="0"
                                                 Storyboard.TargetName="GlowImage"
                                                 Storyboard.TargetProperty="Opacity"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </MultiDataTrigger.ExitActions>
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Game.IsInstalled}" Value="{StaticResource False}">
                    <Setter Property="Text" Value="" TargetName="PlayIcon"/>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
        <Style x:Key="GameGroupBox" TargetType="{x:Type GroupBox}" BasedOn="{StaticResource {x:Type GroupBox}}">
            <Setter Property="Padding" Value="0" />
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type GroupBox}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition SharedSizeGroup="GroupHeaderSize"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0" Padding="5,0">
                                <Border BorderThickness="0,0,0,1" BorderBrush="{StaticResource NormalBrush}" Padding="0">
                                    <TextBlock Style="{StaticResource BaseTextBlockStyle}" Margin="{TemplateBinding Padding}">
                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" ContentSource="Header"
                                                          RecognizesAccessKey="True" />
                                    </TextBlock>
                                </Border>
                            </Border>
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Grid.Row="1"
                                              Margin="0"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource BaseTextBlockStyle}" />
        <DataTemplate x:Key="GameDataTemplate" DataType="{x:Type lpm:GameGroup}">
            <GroupBox Header="{Binding Label}" Style="{DynamicResource GameGroupBox}">
                <ListBox ItemsSource="{Binding Games}" ItemContainerStyle="{DynamicResource GameListItem}"
                         BorderThickness="0" Background="Transparent" Padding="0"
                         ItemTemplate="{DynamicResource GameCoverDataTemplate}"
                         ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                         ScrollViewer.VerticalScrollBarVisibility="Disabled">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Margin="0"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.Resources>
                        <Style TargetType="{x:Type ItemsPresenter}">
                            <Setter Property="Margin" Value="0"/>
                            <Setter Property="ItemsControl.Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <ContentPresenter Margin="0"/>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.Resources>
                </ListBox>
            </GroupBox>
        </DataTemplate>
        <Style x:Key="GameListItem" TargetType="ListBoxItem">
            <EventSetter Event="MouseDoubleClick" Handler="ListBoxItem_MouseDoubleClick"/>
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="ListBoxItem_MouseUp"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Margin" Value="7"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <ScaleTransform ScaleX="1" ScaleY="1" x:Name="Scale"/>
                </Setter.Value>
            </Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Trigger.EnterActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1.05"
                                                 Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1.05"
                                                 Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                        <BeginStoryboard>
                            <Storyboard>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                                 To="1"
                                                 Duration="0:0:0.1"/>
                                <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                                 To="1"
                                                 Duration="0:0:0.1"/>
                            </Storyboard>
                        </BeginStoryboard>
                    </Trigger.ExitActions>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="GameGroupItem" TargetType="ListBoxItem">
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Button HorizontalAlignment="Center" VerticalAlignment="Center" Command="{Binding AddShelveCommand}" Content="{DynamicResource LOC_SPG_AddShelve}"
                    Visibility="{Binding ElementName=ShelvesItemsControl, Path=IsVisible, Converter={StaticResource InvertedBooleanToVisibilityConverter}}"/>
        <Grid Background="Transparent" VerticalAlignment="Bottom">
            <Grid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="{DynamicResource LOC_SPG_AddShelve}" Command="{Binding AddShelveCommand}"/>
                </ContextMenu>
            </Grid.ContextMenu>
            <ItemsControl ItemsSource="{Binding ShelveViewModels}" VerticalAlignment="Bottom" x:Name="ShelvesItemsControl" VerticalContentAlignment="Bottom"
                                      Grid.IsSharedSizeScope="True" HorizontalAlignment="Center"
                          Visibility="{Binding ShelveViewModels.Count, Converter={StaticResource InvertedObjectEqualityToVisibilityConverter}, ConverterParameter={StaticResource Zero}}">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid Columns="1" VerticalAlignment="Bottom"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="{x:Type lpvm:ShelveViewModel}">
                        <DockPanel Grid.Row="1" UseLayoutRounding="True" SnapsToDevicePixels="True" VerticalAlignment="Bottom" LastChildFill="False" HorizontalAlignment="Left"
                                   x:Name="ShelveDockPanel">
                            <DockPanel.Style>
                                <Style TargetType="DockPanel">
                                    <Setter Property="Tag" Value="{Binding ElementName=shelvetoggle}"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ShelveSettings.HorizontalLabels}" Value="{StaticResource True}">
                                            <Setter Property="Tag" Value="{Binding ElementName=shelvetoggleHorizontal}"/>
                                        </DataTrigger>
                                        <!--<DataTrigger Binding="{Binding ShelveProperties.GroupBy}" Value="{x:Static lpm:GroupingField.None}">
                                            <DataTrigger.Setters>
                                                <Setter Property="Margin" Value="{Binding ElementName=GroupLabelSpacer, Path=ActualHeight, Converter={StaticResource DoubleToNegativeTopMarginConverter}}"/>
                                            </DataTrigger.Setters>
                                        </DataTrigger>-->
                                    </Style.Triggers>
                                </Style>
                            </DockPanel.Style>
                            <Grid DockPanel.Dock="Top" Background="Transparent" x:Name="GroupLabelSpacer">
                                <Grid.RowDefinitions>
                                    <RowDefinition SharedSizeGroup="GroupHeaderSize"/>
                                </Grid.RowDefinitions>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShelveProperties.GroupBy}" Value="{x:Static lpm:GroupingField.None}">
                                                <DataTrigger.Setters>
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger.Setters>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                            </Grid>
                            <StackPanel Orientation="Horizontal" DockPanel.Dock="Top"
                                        Margin="6,0,2,2" x:Name="HorizontalLabelStackPanel"
                                        Background="Transparent">
                                <StackPanel.Style>
                                    <Style TargetType="StackPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShelveSettings.HorizontalLabels}" Value="{StaticResource False}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </StackPanel.Style>
                                <TextBlock Text="{Binding ShelveProperties.Name}" Style="{StaticResource {x:Type TextBlock}}" FontSize="{DynamicResource FontSizeLarge}"
                                           FontWeight="Bold"/>
                                <Button Command="{Binding ManualUpdateCommand}"  DockPanel.Dock="Bottom" Background="Transparent">
                                    <TextBlock Text="" FontFamily="{DynamicResource FontIcoFont}"/>
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
                                            <Setter Property="Margin" Value="5,0,0,0"/>
                                            <Setter Property="Padding" Value="0,0,0,0"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding ShelveProperties.SortBy}" Value="{x:Static lpm:SortingField.Random}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <ToggleButton x:Name="shelvetoggleHorizontal" DockPanel.Dock="Top" Background="Transparent"
                                                              Padding="6,0,4,0" Margin="0,0" BorderThickness="0" BorderBrush="Transparent"
                                              Cursor="Hand">
                                    <ToggleButton.Style>
                                        <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                            <Setter Property="Visibility" Value="{Binding ElementName=HorizontalLabelStackPanel, Path=IsMouseOver, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ElementName=SettingsPopup, Path=IsOpen}" Value="{StaticResource True}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ToggleButton.Style>
                                    <ToggleButton.Content>
                                        <TextBlock Text="" FontFamily="{DynamicResource FontIcoFont}"/>
                                    </ToggleButton.Content>
                                </ToggleButton>
                            </StackPanel>
                            <DockPanel DockPanel.Dock="Left" Background="Transparent" x:Name="ListDescription" LastChildFill="False" VerticalAlignment="Bottom" Height="{Binding ElementName=GamesListBox, Path=ActualHeight}"
                                                   HorizontalAlignment="Right">
                                <DockPanel.Style>
                                    <Style TargetType="DockPanel">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ShelveSettings.HorizontalLabels}" Value="{StaticResource True}">
                                                <Setter Property="Visibility" Value="Collapsed"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DockPanel.Style>
                                <ToggleButton x:Name="shelvetoggle" DockPanel.Dock="Top" Background="Transparent"
                                                          Visibility="{Binding ElementName=ListDescription, Path=IsMouseOver, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                          Padding="0,4,0,4" Margin="5,0,0,0" BorderThickness="0" BorderBrush="Transparent"
                                              Cursor="Hand">
                                    <ToggleButton.Content>
                                        <TextBlock Text="" FontFamily="{DynamicResource FontIcoFont}"/>
                                    </ToggleButton.Content>
                                </ToggleButton>
                                <Popup StaysOpen="False" Placement="Right" PlacementTarget="{Binding ElementName=ShelveDockPanel, Path=Tag}" x:Name="SettingsPopup"
                                                   IsOpen="{Binding Tag.IsChecked, ElementName=ShelveDockPanel, Delay=100}"
                                                   DataContext="{x:Null}">
                                    <Border Background="{DynamicResource PopupBackgroundBrush}" Padding="8" CornerRadius="8" MinWidth="260" MaxWidth="400">
                                        <StackPanel Grid.IsSharedSizeScope="True">
                                            <TextBox Text="{Binding ShelveProperties.Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Margin="2"/>
                                            <CheckBox Content="{DynamicResource LOCGameIsGameInstalledTitle}" IsChecked="{Binding ShelveProperties.InstalledOnly}" Margin="2"/>
                                            <CheckBox Content="{DynamicResource LOCQuickFilterFavorites}" IsChecked="{Binding ShelveProperties.FavoritesOnly}" Margin="2"/>
                                            <CheckBox Content="{DynamicResource LOC_SPG_IgnoreHidden}" IsChecked="{Binding ShelveProperties.IgnoreHidden}" Margin="2"/>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="FilterLabelWidht"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{DynamicResource LOCPlatformsTitle}" Style="{StaticResource {x:Type TextBlock}}" Margin="2"/>
                                                <ComboBox ItemsSource="{Binding Platforms}" Margin="2" Grid.Column="1"
                                                                      StaysOpenOnEdit="True" IsSynchronizedWithCurrentItem="False" IsEditable="True"
                                                                      IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False"
                                                                      TextSearch.TextPath="Name">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="FilterLabelWidht"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{DynamicResource LOCGenresLabel}" Style="{StaticResource {x:Type TextBlock}}" Margin="2"/>
                                                <ComboBox ItemsSource="{Binding Genres}" Margin="2" Grid.Column="1"
                                                                      StaysOpenOnEdit="True" IsSynchronizedWithCurrentItem="False" IsEditable="True"
                                                                      IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False"
                                                                      TextSearch.TextPath="Name">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="FilterLabelWidht"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{DynamicResource LOCCategoriesLabel}" Style="{StaticResource {x:Type TextBlock}}" Margin="2"/>
                                                <ComboBox ItemsSource="{Binding Categories}" Margin="2" Grid.Column="1"
                                                                      StaysOpenOnEdit="True" IsSynchronizedWithCurrentItem="False" IsEditable="True"
                                                                      IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False"
                                                                      TextSearch.TextPath="Name">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="FilterLabelWidht"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{DynamicResource LOCTagsLabel}" Style="{StaticResource {x:Type TextBlock}}" Margin="2"/>
                                                <ComboBox ItemsSource="{Binding Tags}" Margin="2" Grid.Column="1"
                                                                      StaysOpenOnEdit="True" IsSynchronizedWithCurrentItem="False" IsEditable="True"
                                                                      IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False"
                                                                      TextSearch.TextPath="Name">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="FilterLabelWidht"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{DynamicResource LOCFeaturesLabel}" Style="{StaticResource {x:Type TextBlock}}" Margin="2"/>
                                                <ComboBox ItemsSource="{Binding Features}" Margin="2" Grid.Column="1"
                                                                      StaysOpenOnEdit="True" IsSynchronizedWithCurrentItem="False" IsEditable="True"
                                                                      IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False"
                                                                      TextSearch.TextPath="Name">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="FilterLabelWidht"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{DynamicResource LOCCompletionStatus}" Style="{StaticResource {x:Type TextBlock}}" Margin="2"/>
                                                <ComboBox ItemsSource="{Binding CompletionStatus}" Margin="2" Grid.Column="1"
                                                                      StaysOpenOnEdit="True" IsSynchronizedWithCurrentItem="False" IsEditable="True"
                                                                      IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False"
                                                                      TextSearch.TextPath="Name">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition SharedSizeGroup="FilterLabelWidht"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <TextBlock Grid.Column="0" VerticalAlignment="Center" Text="{DynamicResource LOCSourcesLabel}" Style="{StaticResource {x:Type TextBlock}}" Margin="2"/>
                                                <ComboBox ItemsSource="{Binding Sources}" Margin="2" Grid.Column="1"
                                                                      StaysOpenOnEdit="True" IsSynchronizedWithCurrentItem="False" IsEditable="True"
                                                                      IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False"
                                                                      TextSearch.TextPath="Name">
                                                    <ComboBox.ItemTemplate>
                                                        <DataTemplate>
                                                            <CheckBox Content="{Binding Name}" IsChecked="{Binding IsChecked, Mode=TwoWay}"/>
                                                        </DataTemplate>
                                                    </ComboBox.ItemTemplate>
                                                </ComboBox>
                                            </Grid>
                                            <Button Margin="2" Content="{DynamicResource LOCClearFilters}" Command="{Binding ResetFiltersCommand}" Padding="2"/>
                                            <DockPanel LastChildFill="False">
                                                <TextBlock Text="{DynamicResource LOC_SPG_NumberOfGames}" VerticalAlignment="Center" Style="{StaticResource {x:Type TextBlock}}" Margin="2"/>
                                                <numeric:IntBox Value="{Binding ShelveProperties.NumberOfGames, UpdateSourceTrigger=PropertyChanged}" Margin="2"
                                                                            MinValue="0"
                                                                            MaxValue="30"
                                                                            MinWidth="30"
                                                                            ValidationTrigger="PropertyChanged"
                                                                            Style="{StaticResource {x:Type TextBox}}"
                                                                            TextAlignment="Center">
                                                </numeric:IntBox>
                                                <TextBlock Text="{DynamicResource LOC_SPG_SkippedGames}" VerticalAlignment="Center" Style="{StaticResource {x:Type TextBlock}}" Margin="2"/>
                                                <numeric:IntBox Value="{Binding ShelveProperties.SkippedGames, UpdateSourceTrigger=PropertyChanged}" Margin="2"
                                                                            MinValue="0"
                                                                            MaxValue="30"
                                                                            MinWidth="30"
                                                                            ValidationTrigger="PropertyChanged"
                                                                            Style="{StaticResource {x:Type TextBox}}"
                                                                            TextAlignment="Center">
                                                </numeric:IntBox>
                                            </DockPanel>
                                            <DockPanel LastChildFill="False">
                                                <TextBlock Margin="2" Text="{DynamicResource LOCMenuSortByTitle}" Foreground="{DynamicResource TextBrush}" DockPanel.Dock="Left" VerticalAlignment="Center"/>
                                                <ComboBox Margin="2" ItemsSource="{Binding Source={ext:EnumBindingSource {x:Type lpm:SortingField}}}" SelectedItem="{Binding ShelveProperties.SortBy}" Text="Sorting" DockPanel.Dock="Right"/>
                                            </DockPanel>
                                            <Button Click="Button_Click" Margin="2" Padding="2">
                                                <Button.Content>
                                                    <TextBlock Text="{Binding ShelveProperties.Order}"/>
                                                </Button.Content>
                                            </Button>
                                            <DockPanel LastChildFill="False">
                                                <TextBlock Margin="2" Text="{DynamicResource LOCMenuGroupByTitle}" DockPanel.Dock="Left" Foreground="{DynamicResource TextBrush}" VerticalAlignment="Center"/>
                                                <ComboBox Margin="2" ItemsSource="{Binding Source={ext:EnumBindingSource {x:Type lpm:GroupingField}}}" SelectedItem="{Binding ShelveProperties.GroupBy}" Text="Grouping" DockPanel.Dock="Right"/>
                                            </DockPanel>
                                            <Button Margin="2" Padding="2"
                                                                Command="{Binding RelativeSource={RelativeSource AncestorType=local:ShelvesView, Mode=FindAncestor}, Path=DataContext.ExtendShelveCommand}"
                                                                CommandParameter="{Binding .}">
                                                <Button.Content>
                                                    <TextBlock Text="{DynamicResource LOC_SPG_ExtendShelve}"/>
                                                </Button.Content>
                                            </Button>
                                            <Button Margin="2" Padding="2"
                                                                Command="{Binding RelativeSource={RelativeSource AncestorType=local:ShelvesView, Mode=FindAncestor}, Path=DataContext.RemoveShelveCommand}"
                                                                CommandParameter="{Binding .}">
                                                <Button.Content>
                                                    <TextBlock Foreground="{DynamicResource WarningBrush}" Text="{DynamicResource LOCRemoveTitle}"/>
                                                </Button.Content>
                                            </Button>
                                            <Grid Margin="2">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="4"/>
                                                    <ColumnDefinition Width="*"/>
                                                </Grid.ColumnDefinitions>
                                                <Button Padding="2" Grid.Column="0"
                                                                Command="{Binding RelativeSource={RelativeSource AncestorType=local:ShelvesView, Mode=FindAncestor}, Path=DataContext.MoveShelveUpCommand}"
                                                                CommandParameter="{Binding .}">
                                                    <Button.Content>
                                                        <TextBlock Text="" FontFamily="{StaticResource FontIcoFont}"/>
                                                    </Button.Content>
                                                </Button>
                                                <Button Padding="2" Grid.Column="2"
                                                                Command="{Binding RelativeSource={RelativeSource AncestorType=local:ShelvesView, Mode=FindAncestor}, Path=DataContext.MoveShelveDownCommand}"
                                                                CommandParameter="{Binding .}">
                                                    <Button.Content>
                                                        <TextBlock Text="" FontFamily="{StaticResource FontIcoFont}"/>
                                                    </Button.Content>
                                                </Button>
                                            </Grid>
                                        </StackPanel>
                                    </Border>
                                </Popup>
                                
                                <controls:SidewaysTextBlock Text="{Binding ShelveProperties.Name}" VerticalAlignment="Bottom"
                                                                    DockPanel.Dock="Bottom" Margin="10,10,5,30" HorizontalAlignment="Right"/>
                                <Button Command="{Binding ManualUpdateCommand}"  DockPanel.Dock="Bottom" Background="Transparent">
                                    <TextBlock Text="" FontFamily="{DynamicResource FontIcoFont}"/>
                                    <Button.Style>
                                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                            <Setter Property="BorderThickness" Value="0"/>
                                            <Setter Property="Foreground" Value="{DynamicResource GlyphBrush}"/>
                                            <Setter Property="Margin" Value="5,0,0,0"/>
                                            <Setter Property="Padding" Value="0,4,0,0"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <Trigger Property="IsMouseOver" Value="True">
                                                    <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
                                                </Trigger>
                                                <DataTrigger Binding="{Binding ShelveProperties.SortBy}" Value="{x:Static lpm:SortingField.Random}">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                                <controls:SidewaysTextBlock Text="Placeholder" VerticalAlignment="Bottom" Visibility="Hidden"
                                                                    DockPanel.Dock="Bottom" HorizontalAlignment="Right" Margin="10,10,5,30"/>
                            </DockPanel>
                            <ListBox x:Name="GamesListBox" 
                                             VerticalAlignment="Bottom"
                                             Style="{DynamicResource GameGroupListStyle}"
                                             DockPanel.Dock="Left" 
                                             ItemsSource="{Binding CollectionViewSource.View}"
                                             ItemContainerStyle="{StaticResource GameListItem}"
                                             ItemTemplate="{StaticResource GameCoverDataTemplate}"
                                             SizeChanged="UserControl_SizeChanged">
                                <ListBox.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.Panel>
                                            <ItemsPanelTemplate>
                                                <VirtualizingStackPanel Orientation="Horizontal" 
                                                                            Style="{DynamicResource VirtualizedStackPanelStyle}"/>
                                            </ItemsPanelTemplate>
                                        </GroupStyle.Panel>
                                        <GroupStyle.ContainerStyle>
                                            <Style TargetType="GroupItem">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate>
                                                            <GroupBox Style="{StaticResource GameGroupBox}" Header="{Binding Name, Converter={StaticResource ObjectToGroupHeaderConverter}}">
                                                                <ItemsPresenter/>
                                                            </GroupBox>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </GroupStyle.ContainerStyle>
                                    </GroupStyle>
                                </ListBox.GroupStyle>
                                <ListBox.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ListBox.ItemsPanel>
                            </ListBox>
                        </DockPanel>
                        <DataTemplate.Triggers>
                            <Trigger Property="IsOpen" SourceName="SettingsPopup" Value="True">
                                <Setter Property="DataContext" TargetName="SettingsPopup" Value="{Binding .}"/>
                            </Trigger>
                        </DataTemplate.Triggers>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </Grid>
    </Grid>
</UserControl>
